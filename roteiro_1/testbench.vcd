$date
  Thu Apr  7 21:58:40 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module math_real $end
$upscope $end
$scope module testbench $end
$var reg 1 ! ck $end
$var reg 7 " hex0[6:0] $end
$var reg 7 # hex1[6:0] $end
$var reg 7 $ hex2[6:0] $end
$scope module inst $end
$var reg 1 % ck $end
$var reg 7 & hex0[6:0] $end
$var reg 7 ' hex1[6:0] $end
$var reg 7 ( hex2[6:0] $end
$var reg 1 ) ckdez $end
$var reg 1 * ckcent $end
$var reg 4 + cent[3:0] $end
$var reg 4 , dez[3:0] $end
$var reg 4 - uni[3:0] $end
$scope module conta_uni $end
$var reg 1 . ckin $end
$var reg 4 / vcont[3:0] $end
$var reg 1 0 ckout $end
$var reg 4 1 vcont_s[3:0] $end
$var reg 4 2 max[3:0] $end
$var reg 1 3 ckout_s $end
$upscope $end
$scope module conta_dez $end
$var reg 1 4 ckin $end
$var reg 4 5 vcont[3:0] $end
$var reg 1 6 ckout $end
$var reg 4 7 vcont_s[3:0] $end
$var reg 4 8 max[3:0] $end
$var reg 1 9 ckout_s $end
$upscope $end
$scope module conta_cent $end
$var reg 1 : ckin $end
$var reg 4 ; vcont[3:0] $end
$var reg 1 < ckout $end
$var reg 4 = vcont_s[3:0] $end
$var reg 4 > max[3:0] $end
$var reg 1 ? ckout_s $end
$upscope $end
$scope module disp_uni $end
$var reg 4 @ dec[3:0] $end
$var reg 7 A disp[6:0] $end
$upscope $end
$scope module disp_dez $end
$var reg 4 B dec[3:0] $end
$var reg 7 C disp[6:0] $end
$upscope $end
$scope module disp_cent $end
$var reg 4 D dec[3:0] $end
$var reg 7 E disp[6:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
b1111001 "
b1111001 #
b1000000 $
0%
b1111001 &
b1111001 '
b1000000 (
0)
1*
b0001 +
b0001 ,
b0000 -
0.
b0000 /
00
b0000 1
b1001 2
03
04
b0001 5
16
b0001 7
b1001 8
19
1:
b0001 ;
1<
b0001 =
b1001 >
1?
b0000 @
b1000000 A
b0001 B
b1111001 C
b0001 D
b1111001 E
#500000000000
1!
1%
1.
#1000000000000
0!
b1111001 $
0%
b1111001 (
1)
b0001 -
0.
b0001 /
10
b0001 1
13
14
b0001 @
b1111001 A
#1500000000000
1!
1%
1.
#2000000000000
0!
b0100100 $
0%
b0100100 (
b0010 -
0.
b0010 /
b0010 1
b0010 @
b0100100 A
#2500000000000
1!
1%
1.
#3000000000000
0!
b0110000 $
0%
b0110000 (
b0011 -
0.
b0011 /
b0011 1
b0011 @
b0110000 A
